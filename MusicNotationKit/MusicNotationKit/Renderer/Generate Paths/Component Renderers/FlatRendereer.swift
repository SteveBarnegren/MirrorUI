//
//  FlatRendereer.swift
//  MusicNotationKit
//
//  Created by Steve Barnegren on 11/07/2019.
//  Copyright Â© 2019 Steve Barnegren. All rights reserved.
//

import Foundation

class FlatRenderer {
    
    func paths(forFlat flat: FlatSymbol) -> [Path] {
        
        var path = flatPath.translated(x: flat.position.x, y: flat.position.y + 0.5)
        path.drawStyle = .fill
        return [path]
    }
    
    private let flatPath: Path = {
        
        let commands: [Path.Command] = [
            .move(Point(-0.11462902906132193, 0.4999999999999999)),
            .line(Point(-0.11462902906132193, 0.014208965636987037)),
            .curve(Point(-0.11462902906132193, -0.08402808871735773), c1: Point(-0.11462906058767247, 0.01420880800523383), c2: Point(-0.11462906058767247, -0.018536981867383173)),
            .curve(Point(0.03186028717075279, -0.01955985431358137), c1: Point(-0.07111741605421167, -0.04207282129863532), c2: Point(-0.02228770177516301, -0.0205835149185451)),
            .curve(Point(0.11888365505355103, -0.06407348508594768), c1: Point(0.06570250046558831, -0.01956032720884071), c2: Point(0.09471025823350368, -0.03439820413296285)),
            .curve(Point(0.152242569393225, -0.15617078265505335), c1: Point(0.14015579216732477, -0.09170286351478318), c2: Point(0.1512753567190644, -0.12240196270448522)),
            .curve(Point(0.1333875260559212, -0.2482679225924056), c1: Point(0.15320885204004187, -0.18277665811067806), c2: Point(0.14692426320000734, -0.21347559966862667)),
            .curve(Point(0.10147899724016685, -0.2943164137452051), c1: Point(0.12855266068644294, -0.2625941268457989), c2: Point(0.11791647390574117, -0.2779436764406498)),
            .curve(Point(0.06231847775211391, -0.33269028773233256), c1: Point(0.08890871613782605, -0.30659608494743645), c2: Point(0.07585521489620006, -0.31938727118864363)),
            .curve(Point(-0.15233914726227993, -0.5), c1: Point(-0.009234216296712089, -0.38794841406299074), c2: Point(-0.08078667389790825, -0.44371821306437786)),
            .line(Point(-0.15233914726227993, 0.5)),
            .line(Point(-0.1146290290613217, 0.5)),
            .move(Point(0.00285251363966213, -0.11779690866792542)),
            .curve(Point(-0.042109563707244196, -0.09630775991958862), c1: Point(-0.008750743946622064, -0.1034708620462853), c2: Point(-0.02373808729908225, -0.09630775991958862)),
            .curve(Point(-0.09867474100868154, -0.13775135466758248), c1: Point(-0.06531587395853358, -0.09630775991958862), c2: Point(-0.08417091729583742, -0.11012229150225339)),
            .curve(Point(-0.1146290290613217, -0.28971167497215217), c1: Point(-0.10931097507890912, -0.15924066104767243), c2: Point(-0.11462906058767225, -0.2098940486052781)),
            .line(Point(-0.1146290290613217, -0.4217175492770653)),
            .curve(Point(-0.0334072348005519, -0.3465048193149969), c1: Point(-0.11366211588749225, -0.425810457747636), c2: Point(-0.08658823175676161, -0.4007397579359506)),
            .curve(Point(0.023157958264060696, -0.24519804419978558), c1: Point(-0.004399587374863678, -0.31785241080821025), c2: Point(0.014455455962440161, -0.2840832755941357)),
            .curve(Point(0.028959516122913836, -0.19914939541523285), c1: Point(0.027025484853975906, -0.22984833697318147), c2: Point(0.028959342727985365, -0.21449910264183697)),
            .curve(Point(0.00285251363966213, -0.11779690866792542), c1: Point(0.013196183176040988, -0.16538041783291152), c2: Point(0.0202570138212933, -0.13826302733831103))
        ]
        
        return Path(commands: commands).scaled(2.25)
    }()
}
